{
  "version": 3,
  "sources": ["../src/off.ts", "../src/utils.ts"],
  "sourcesContent": ["import { turnOffDND } from \"./utils\";\n\nexport default async () => {\n  await turnOffDND();\n};\n", "import { exec } from \"child_process\";\nimport { open, showHUD, closeMainWindow } from \"@raycast/api\";\n\nconst DNDshortcutName = `DND Raycast`;\n\nfunction executeCommand(command: string): Promise<{ stdout: string; stderr: string }> {\n  return new Promise((resolve, reject) => {\n    exec(command, (error, stdout, stderr) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve({ stdout, stderr });\n      }\n    });\n  });\n}\n\nasync function checkAndInstallDNDShortcuts(): Promise<boolean> {\n  const { stdout } = await executeCommand(\"shortcuts list\");\n  const shortcuts = stdout.split(\"\\n\").map((item) => item.trim());\n  const isInstalled = shortcuts.includes(DNDshortcutName);\n  if (!isInstalled) {\n    await closeMainWindow();\n    await showHUD(\"Installing Shortcut (this will only happen once)\");\n    const shortcutPath = `${__dirname}/assets/${DNDshortcutName}.shortcut`;\n    await open(shortcutPath);\n    return false;\n  }\n  return true;\n}\n\nexport async function turnOnDND() {\n  const isInstalled = await checkAndInstallDNDShortcuts();\n  if (!isInstalled) return;\n  await executeCommand(`echo \"on\" | shortcuts run \"${DNDshortcutName}\"`);\n  const isOn = await getDNDStatus();\n  if (isOn) {\n    await showHUD(`Do Not Disturb is on`);\n  }\n}\n\nexport async function turnOffDND() {\n  const isInstalled = await checkAndInstallDNDShortcuts();\n  if (!isInstalled) return;\n  await executeCommand(`echo \"off\" | shortcuts run \"${DNDshortcutName}\"`);\n  const isOn = await getDNDStatus();\n  if (!isOn) {\n    await showHUD(`Do Not Disturb is off`);\n  }\n}\n\nexport async function statusDND() {\n  const isInstalled = await checkAndInstallDNDShortcuts();\n  if (!isInstalled) return;\n  const isOn = await getDNDStatus();\n  await showHUD(`Do Not Disturb is ${isOn ? \"on\" : \"off\"}`);\n}\n\nexport async function toggleDND() {\n  const isInstalled = await checkAndInstallDNDShortcuts();\n  if (!isInstalled) return;\n  const isOn = await getDNDStatus();\n  if (isOn) {\n    await turnOffDND();\n  } else {\n    await turnOnDND();\n  }\n}\n\nexport async function getDNDStatus() {\n  const { stdout } = await executeCommand(`echo \"status\" | shortcuts run \"${DNDshortcutName}\" | cat`);\n  return stdout !== \"\";\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GCAA,IAAAI,EAAqB,yBACrBC,EAA+C,wBAEzCC,EAAkB,cAExB,SAASC,EAAeC,EAA8D,CACpF,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,IACtC,QAAKF,EAAS,CAACG,EAAOC,EAAQC,IAAW,CACnCF,EACFD,EAAOC,CAAK,EAEZF,EAAQ,CAAE,OAAAG,EAAQ,OAAAC,CAAO,CAAC,CAE9B,CAAC,CACH,CAAC,CACH,CAEA,eAAeC,GAAgD,CAC7D,GAAM,CAAE,OAAAF,CAAO,EAAI,MAAML,EAAe,gBAAgB,EAGxD,GAAI,CAFcK,EAAO,MAAM;AAAA,CAAI,EAAE,IAAKG,GAASA,EAAK,KAAK,CAAC,EAChC,SAAST,CAAe,EACpC,CAChB,QAAM,mBAAgB,EACtB,QAAM,WAAQ,kDAAkD,EAChE,IAAMU,EAAe,GAAG,oBAAoBV,aAC5C,eAAM,QAAKU,CAAY,EAChB,GAET,MAAO,EACT,CAYA,eAAsBC,GAAa,CAEjC,GAAI,CADgB,MAAMC,EAA4B,EACpC,OAClB,MAAMC,EAAe,+BAA+BC,IAAkB,EACzD,MAAMC,EAAa,GAE9B,QAAM,WAAQ,uBAAuB,CAEzC,CAoBA,eAAsBC,GAAe,CACnC,GAAM,CAAE,OAAAC,CAAO,EAAI,MAAMC,EAAe,kCAAkCC,UAAwB,EAClG,OAAOF,IAAW,EACpB,CDtEA,IAAOG,EAAQ,SAAY,CACzB,MAAMC,EAAW,CACnB",
  "names": ["off_exports", "__export", "off_default", "__toCommonJS", "import_child_process", "import_api", "DNDshortcutName", "executeCommand", "command", "resolve", "reject", "error", "stdout", "stderr", "checkAndInstallDNDShortcuts", "item", "shortcutPath", "turnOffDND", "checkAndInstallDNDShortcuts", "executeCommand", "DNDshortcutName", "getDNDStatus", "getDNDStatus", "stdout", "executeCommand", "DNDshortcutName", "off_default", "turnOffDND"]
}

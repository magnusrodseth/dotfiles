Please suggest 3 commit messages, given the following diff:

```diff
{{diff}}
```

**Criteria:**

1. **Format:** Each commit message must follow the conventional commits format, which is `<type>: <description>`.
2. **Relevance:** Avoid mentioning a module name unless it's directly relevant to the change.
3. **Enumeration:** List the commit messages, beginning with 1.
4. **Clarity and Conciseness:** Each message should clearly and concisely convey the change made.

**Commit Message Examples:**

- fix: add password regex pattern
- feat: add new test cases
- style: remove unused imports
- refactor: extract common code to `utils/wait.ts`

**Instructions:**

- Take a moment to understand the changes made in the diff.
- Think about the impact of these changes on the project (e.g., bug fixes, new features, performance improvements, code refactoring, documentation updates). It's critical to my career you abstract the changes to a higher level and not just describe the code changes.
- Generate commit messages that accurately describe these changes, ensuring they are helpful to someone reading the project's history.
- Remember, a well-crafted commit message can significantly aid in the maintenance and understanding of the project over time.
- If multiple changes are present, make sure you capture them all in each commit message.
- The type and beginning of the descripion must be in lowercase, for example `fix: add password regex pattern`.

Write your 3 commit messages below, in the format `1. <message>`, `2. <message>`, etc.:

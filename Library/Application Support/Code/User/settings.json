{
  "latex-workshop.formatting.latex": "latexindent",
  "svelte.plugin.css.diagnostics.enable": false,
  "git.mergeEditor": true,
  "git.enableSmartCommit": true,
  "python.defaultInterpreterPath": "/Users/magnusrodseth/opt/anaconda3/bin/python",
  "nasc-touchbar.peekDefinition": true,
  "nasc-touchbar.blockComment": true,
  "python.showStartPage": false,
  "workbench.iconTheme": "material-icon-theme",
  "nasc-touchbar.selectNext": true,
  "latex-workshop.view.pdf.viewer": "tab",
  "open-in-browser.default": "chrome",
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "nasc-touchbar.showCommands": false,
  "nasc-touchbar.commentLine": true,
  "terminal.integrated.inheritEnv": false,
  "terminal.external.osxExec": "iTerm.app",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

  "editor.autoClosingBrackets": "always",
  "[xml]": {
    "editor.defaultFormatter": "DotJoshJohnson.xml"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "editor.renderWhitespace": "all",
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "java.semanticHighlighting.enabled": true,
  "todohighlight.keywords": [],
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true,
    "c": true
  },
  "[java]": {
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.defaultFormatter": "mwpb.java-prettier-formatter"
  },
  "editor.suggestSelection": "first",
  "liveServer.settings.donotShowInfoMsg": true,
  "editor.accessibilitySupport": "on",
  "editor.inlineSuggest.enabled": true,
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "java.configuration.checkProjectSettingsExclusions": false,
  "editor.fontSize": 16,
  "code-runner.clearPreviousOutput": true,
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "nasc-touchbar.rename": false,
  "nasc-touchbar.addCursorBelow": false,
  "[latex]": {
    "editor.formatOnPaste": false,
    "editor.suggestSelection": "recentlyUsedByPrefix",
    "editor.defaultFormatter": "James-Yu.latex-workshop",
    "editor.wordWrap": "on"
  },
  "security.workspace.trust.untrustedFiles": "open",
  "dart.flutterSdkPath": "/Users/magnusrodseth/flutter",
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.formatOnPaste": true,
  "redhat.telemetry.enabled": false,
  "workbench.editorAssociations": {
    "*.copilotmd": "vscode.markdown.preview.editor",
    "*.ipynb": "jupyter-notebook",
    "git-rebase-todo": "default",
    "*.pdf": "latex-workshop-pdf-hook"
  },
  "python.languageServer": "Pylance",
  "[less]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "typescript.updateImportsOnFileMove.enabled": "always",
  "workbench.colorCustomizations": {
    "editorLineNumber.foreground": "#8d8d8d",
    "editorLineNumber.activeForeground": "#dbdbdb"
  },
  "tabnine.experimentalAutoImports": true,
  "terminal.integrated.tabs.enabled": true,
  "python.pythonPath": "/Users/magnusrodseth/opt/anaconda3/bin/python",
  "nasc-touchbar.goToDefinition": false,
  "python.jediEnabled": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    "editor.formatOnType": true
  },
  "git.autofetch": true,
  "[dart]": {
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off",
    "editor.rulers": [80],
    "editor.selectionHighlight": false,
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.suggest.snippetsPreventQuickSuggestions": false
  },
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "eslint.format.enable": true,
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit"
  },
  "eslint.validate": ["javascript", "typescript"],
  "svelte.enable-ts-plugin": true,
  "[svelte]": {
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[postcss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // Don't display popup when hovering a blame line in GitLens
  "gitlens.hovers.currentLine.enabled": false,

  "vim.vimrc.path": "$HOME/.config/nvim/init.lua",
  "vim.vimrc.enable": true,
  // Add relatvie line numbers
  "editor.lineNumbers": "relative",
  "vim.normalModeKeyBindings": [
    // Ensure cursor stays vertically centered going down
    {
      "before": ["j"],
      "after": ["j", "z", "z"]
    },
    // Ensure cursor stays vertically centered going up
    {
      "before": ["k"],
      "after": ["k", "z", "z"]
    },
    // Go to end of file, go to end of line, create a new blank line
    {
      "before": [","],
      "after": ["G", "A", "\n"]
    },
    // Go to top of file, go to start of line, enter insert mode
    {
      "before": [";"],
      "after": ["g", "g", "I"]
    }
  ],
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.lineHeight": 1.2,
  "githubPullRequests.pullBranch": "never",
  "latex-workshop.latex.outDir": "%DIR%/out",
  "latex-workshop.latex.recipes": [
    {
      "name": "latexmk",
      "tools": ["latexmk"]
    },
    {
      "name": "xelatex -> biber -> xelatex*2",
      "tools": ["xelatex", "biber", "xelatex", "xelatex"]
    }
  ],
  "latex-workshop.latex.tools": [
    {
      "name": "latexmk",
      "command": "latexmk",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-pdf",
        "-shell-escape",
        "-aux-directory=out",
        "-output-directory=out",
        "%DOC%"
      ]
    },
    {
      "name": "xelatex",
      "command": "xelatex",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-shell-escape",
        "-file-line-error",
        "-aux-directory=out",
        "-output-directory=out",
        "%DOC%"
      ]
    },
    {
      "name": "biber",
      "command": "biber",
      "args": ["--output-directory=out", "%DOCFILE%"]
    },
    {
      "name": "pdflatex",
      "command": "pdflatex",
      "args": [
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-shell-escape",
        "-aux-directory=out",
        "-output-directory=out",
        "%DOC%"
      ]
    }
  ],
  "[astro]": {
    "editor.defaultFormatter": "astro-build.astro-vscode"
  },
  "svelte.plugin.svelte.note-new-transformation": false,
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.fontFamily": "'FiraCode Nerd Font Mono', Monaco, 'Courier New', monospace",
  "css.lint.unknownAtRules": "ignore",
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[svg]": {
    "editor.defaultFormatter": "jock.svg"
  },
  "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 4, ColumnLimit: 0}",
  "editor.minimap.enabled": false,
  "svg.preview.mode": "svg",
  "jupyter.askForKernelRestart": false,
  "editor.inlayHints.enabled": "offUnlessPressed",
  "codesandbox.currentWorkspace": "c44cea8a-04fb-4749-9109-3fd3792b2c9f",
  "remote.SSH.remotePlatform": {
    "sandbox.hgtg8w.csb": "linux"
  },
  "workbench.sideBar.location": "right",
  "eslint.workingDirectories": [
    {
      "pattern": "./**/*"
    }
  ],
  "prisma.showPrismaDataPlatformNotification": false,
  "github.copilot.editor.enableAutoCompletions": true,
  "workbench.colorTheme": "Tokyo Night Ported Nvim",
  "editor.quickSuggestionsDelay": 1,
  "editor.suggest.preview": true,
  "editor.codeLens": false,
  "[mdx]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "window.commandCenter": false,
  "accessibility.signals.lineHasBreakpoint": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.chatRequestSent": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.chatResponseReceived": {
    "sound": "off"
  },
  "accessibility.signals.clear": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.onDebugBreak": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.diffLineDeleted": {
    "sound": "off"
  },
  "accessibility.signals.diffLineInserted": {
    "sound": "off"
  },
  "accessibility.signals.diffLineModified": {
    "sound": "off"
  },
  "accessibility.signals.positionHasError": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.lineHasError": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.lineHasFoldedArea": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.lineHasInlineSuggestion": {
    "sound": "off"
  },
  "accessibility.signals.noInlayHints": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.notebookCellCompleted": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.notebookCellFailed": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.progress": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.taskCompleted": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.taskFailed": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.terminalBell": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.terminalCommandFailed": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.terminalCommandSucceeded": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.terminalQuickFix": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.voiceRecordingStarted": {
    "sound": "off"
  },
  "accessibility.signals.voiceRecordingStopped": {
    "sound": "off"
  },
  "accessibility.signals.positionHasWarning": {
    "sound": "off",
    "announcement": "auto"
  },
  "accessibility.signals.lineHasWarning": {
    "sound": "off",
    "announcement": "auto"
  },
  "chat.editing.alwaysSaveWithGeneratedChanges": true
}
